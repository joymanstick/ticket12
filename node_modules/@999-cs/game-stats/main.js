/**
 * GAME STATS : https://www.game-state.com/
 * Supports : [MTASA]
 * By : DEV, 9 9 9 </>#7074
 * ID : 678517905150836757
*/

const cheerio = require("cheerio");
const request = require("request");
require("colors");

let games = {
    'mtasa' : 'Multi Theft Auto: San Andreas'
};

function query({ip,port,type},callback){
    if(!ip || !port || !type) return console.log(`[GAME-STATS-ERROR] • One of query arguments is null • [GAME-STATS-ERROR]`.bold.red)
    let types = ['mtasa'];
    if(!types.includes(type)) return console.log(`[GAME-STATS-ERROR] • Unsupported game type • [GAME-STATS-ERROR]\n[GAME-STATS-ERROR] • Supported type is ${types} • [GAME-STATS-ERROR]`.bold.red)
    let GameStatsMainLink = 'https://www.game-state.com/';
    let GameStatsServerLink = `${GameStatsMainLink}${ip}:${port}/`;
    request(GameStatsServerLink , ( error , request , html ) => {
        if(error) {
            console.log(error)
            callback(error,null)
            return
        } else {
            if(request.statusCode != 200) {
                callback('Returned with statusCode equal ' + request.statusCode, null) 
                return
            } else if (request.statusCode == 200){
                const $ = cheerio.load(html);
                let GAMESTATS;
                let SERVERINFO;
                let SERVERVARIABLES;
                let ONLINEPLAYERS;
                $('#s-info').each(( index , selection ) => {
                    let Name = $(selection).find('#hostname').text();
                    let Game = games['mtasa']
                    let State = $(selection).find("#state").text();
                    let Players = $(selection).find('#players').text();
                    let Address = GameStatsServerLink;
                    let Mode = $(selection).find("#gamemode").text();
                    let Map = $(selection).find("#mapname").text();
                    SERVERINFO = {
                        "Server Name" : Name,
                        "Game Name" : Game,
                        "State" : State,
                        "Players" : Players,
                        "Address" : Address,
                        "Game Mode":Mode,
                        "Map Name" : Map,
                    }
                });
                $('#playerslist').map(( index , selection ) => {
                    let playerslist = $(selection).find('tr').text().split("\n").filter(x => x != '')
                    let array = [];
                    let i = 2;
                    let j = 3;
                    while (i < playerslist.length){
                        array.push({ Players : playerslist[i] , Hours: playerslist[j] })
                        j+=2
                        i+=2
                    }
                    ONLINEPLAYERS = array;
                });
                $('#var').each(( index , selection ) => {
                    let variable = $(selection).find('tr').text().split("\n").filter(x => x != '')
                    let SERVERVARIABLES = {};
                    let i = 0;
                    let j = 1;
                    while ( i < variable.length ){
                        SERVERVARIABLES[variable[i].replace(":",'')] = variable[j];
                        i+=2;
                        j+=2;
                    }
                    GAMESTATS = {
                        SERVERINFO:SERVERINFO,
                        SERVERVARIABLES:SERVERVARIABLES,
                        ONLINEPLAYERS:ONLINEPLAYERS
                    }
                });
                
                callback(null,GAMESTATS)
            }
        }
    });
}

module.exports = {
    query: query,
}